{"version":3,"sources":["components/contactList/ContactList.js","components/contactForm/ContactForm.js","components/filter/Filter.js","App.js","index.js"],"names":["Item","styled","li","Button","button","ContactList","contacts","onRemoveContact","className","map","contact","name","number","type","onClick","id","Form","form","Label","label","ContactForm","state","handleChange","e","currentTarget","value","setState","handleNameChange","event","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","onChange","Component","Find","div","Filter","onChangeFilter","target","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58c056a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Item = styled.li`\r\n  padding-bottom: 10px;\r\n`;\r\nconst Button = styled.button`\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  padding: 1px 7px 2px;\r\n  text-rendering: auto;\r\n  color: initial;\r\n  display: inline-block;\r\n  text-align: start;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background: #4a6dbb;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 4px #cbd6ee;\r\n  }\r\n`;\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className=\"list\">\r\n    {contacts.map((contact) => (\r\n      <Item className=\"item\" key={contact.id}>\r\n        {contact.name + \": \" + contact.number}\r\n        {\r\n          <Button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </Button>\r\n        }\r\n      </Item>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  width: 200px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n`;\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ name: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Find = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 200px;\r\n`;\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <Find>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </Find>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\n// import shortid from \"shortid\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./components/filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  addContact = (task) => {\n    const searchName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}